wildcard_constraints:
    quarter="\d{4}-\d{2}-\d{2}"

rule all:
    input: expand("results/{quarter}.finished", quarter=config["quarter"])

checkpoint process_all_billing:
    input:
        pi="resources/CBS Server - New PI account request.xlsx",
        storage_update="resources/CBS Server - PI account updates.xlsx",
        user="resources/CBS Server - New User account request.xlsx",
        user_update="resources/CBS Server - User account updates.xlsx",
    output:
        quarter_dir=directory("results/tex_{quarter}")
    conda:
        "envs/cbs-server-billing.yaml"
    script:
        "scripts/gen_bills.py"

rule generate_pdf:
    input:
        "results/tex_{quarter}/{filename}.tex"
    output:
        "results/pdf_{quarter}/{filename}.pdf"
    conda:
        "envs/tectonic.yaml"
    container:
        "docker://dxjoke/tectonic-docker"
    shell:
        "mkdir -p results/pdf_{wildcards.quarter} && tectonic {input} -o results/pdf_{wildcards.quarter}"

def aggregate_input(wildcards):
    checkpoint_output = checkpoints.process_all_billing.get(**wildcards).output["quarter_dir"]
    output_docs = Path(checkpoint_output) / "{filename}.tex"
    output_pdfs = Path("results") / "pdf_{quarter}" / "{filename}.pdf"
    return expand(output_pdfs, filename=glob_wildcards(output_docs).filename, allow_missing=True)

rule aggregate:
    input:
        aggregate_input
    output:
        touch("results/{quarter}.finished")
